CREATE DATABASE sql_training;
CREATE SCHEMA deleted;
SET search_path TO public;

CREATE TABLE public.locations (
     id    integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     uid uuid NOT NULL,
     created_at timestamp NOT NULL DEFAULT current_timestamp,
	   updated_at timestamp NOT NULL DEFAULT current_timestamp,
     name varchar(255) NOT NULL DEFAULT ''
);

-- copy table. deleted will not have a sequence or default values.
CREATE TABLE deleted.locations AS
  TABLE public.locations;

CREATE UNIQUE INDEX IF NOT EXISTS idx_location_uid ON public.locations (uid);
CREATE UNIQUE INDEX IF NOT EXISTS idx_location_uid ON deleted.locations (uid);
CREATE UNIQUE INDEX IF NOT EXISTS idx_location_name ON public.locations (name);
CREATE UNIQUE INDEX IF NOT EXISTS idx_location_name ON deleted.locations (name);
CREATE UNIQUE INDEX IF NOT EXISTS idx_location_id ON deleted.locations (id);

INSERT INTO public.locations (uid, name) VALUES
  ('219ce988-ac33-4ce9-bbbe-0453b44416d9','ogden'),
  ('2be779dd-c4d1-412b-ab4d-22742b39681c','salt lake city'),
  ('b4aa609b-e3a4-40bd-baf8-d2dbe9786014','provo')
  ON CONFLICT (uid) DO UPDATE SET name = EXCLUDED.name;

-- SET search_path TO deleted, public;
-- select count(1) from locations;
-- SET search_path TO public;

select * from public.locations;
-- 3
select * from deleted.locations;
-- 0

WITH items AS (
     DELETE FROM public.locations
     WHERE name = 'ogden'
     RETURNING *
)
INSERT INTO deleted.locations SELECT * FROM items;

select * from public.locations;
-- 2
select * from deleted.locations;
-- 1

INSERT INTO public.locations (uid, name) VALUES
  ('ea31deb7-9e91-479a-b838-bfc1490091c9','st. george')
  ON CONFLICT (uid) DO UPDATE SET name = EXCLUDED.name;

select * from public.locations;
-- 3
select * from deleted.locations;
-- 1

WITH items AS (
     DELETE FROM deleted.locations
     WHERE name = 'ogden'
     RETURNING *
)
INSERT INTO public.locations SELECT * FROM items;

select * from public.locations;
-- 4
select * from deleted.locations;
-- 0

INSERT INTO public.locations (uid, name) VALUES
  ('14511184-cfe8-4cc7-af1f-730aa6896876','cedar city')
  ON CONFLICT (uid) DO UPDATE SET name = EXCLUDED.name;

select * from public.locations;
-- 4
select * from deleted.locations;
-- 0
